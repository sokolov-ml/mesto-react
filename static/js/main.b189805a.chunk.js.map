{"version":3,"sources":["images/header__logo.svg","images/profile__photo.png","images/profile__edit.svg","images/profile__add.svg","components/Header.js","components/utils/Api.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/PopupWithImage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","className","src","logo","alt","api","options","this","_options","_url","baseUrl","_token","headers","authorization","_path","user","cards","avatar","path","method","body","fetch","JSON","stringify","then","res","ok","json","Promise","reject","status","_fetch","newName","newAbout","name","about","newImageUrl","link","cardId","Card","React","useState","card","owner","_id","currentUserId","isMyCard","likes","some","item","isLiked","onClick","onCardClick","length","Main","userId","setUserId","userName","setUserName","userDescription","setUserDescription","imgAvatar","userAvatar","setUserAvatar","setCards","useEffect","console","log","getCurrentUserInfo","result","catch","error","getCards","onEditAvatar","onEditProfile","imgEdit","onAddPlace","imgAdd","map","key","children","Footer","PopupWithForm","isOpen","type","onClose","title","PopupWithImage","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isRemoveCardPopupOpen","setIsRemoveCardPopupOpen","setIsShowImagePopupOpen","selectedCard","setSelectedCard","closeAllPopups","htmlFor","id","placeholder","required","defaultValue","minLength","maxLength","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b189805a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/header__logo.855a8c98.svg\";","module.exports = __webpack_public_path__ + \"static/media/profile__photo.62cf7cfc.png\";","module.exports = __webpack_public_path__ + \"static/media/profile__edit.58afbe73.svg\";","module.exports = __webpack_public_path__ + \"static/media/profile__add.bdfb8ebb.svg\";","import React from 'react';\r\n\r\nexport default function Header(props) {\r\n  return (\r\n    <header className='header'>\r\n      <img src={props.logo} alt='Логотип' className='header__logo' />\r\n    </header>\r\n  );\r\n}\r\n","class Api {\n  constructor(options) {\n    this._options = options;\n    this._url = options.baseUrl;\n    this._token = options.headers.authorization;\n    this._path = {\n      user: '/users/me',\n      cards: '/cards',\n      avatar: '/users/me/avatar',\n    };\n  }\n\n  _fetch(path, method = 'GET', body) {\n    return fetch(`${this._options.baseUrl}${path}`, {\n      headers: this._options.headers,\n      method: method,\n      body: JSON.stringify(body),\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n  getCurrentUserInfo() {\n    return this._fetch(this._path.user);\n  }\n\n  updateCurrentUserInfo(newName, newAbout) {\n    return this._fetch(this._path.user, 'PATCH', {\n      name: newName,\n      about: newAbout,\n    });\n  }\n\n  updateCurrentUserPhoto(newImageUrl) {\n    return this._fetch(this._path.avatar, 'PATCH', {\n      avatar: newImageUrl,\n    });\n  }\n\n  getCards() {\n    return this._fetch(this._path.cards);\n  }\n\n  addNewCard(name, link) {\n    return this._fetch(this._path.cards, 'POST', {\n      name: name,\n      link: link,\n    });\n  }\n\n  removeCard(cardId) {\n    return this._fetch(`${this._path.cards}/${cardId}`, 'DELETE');\n  }\n\n  setLikeCardOn(cardId) {\n    return this._fetch(`${this._path.cards}/likes/${cardId}`, 'PUT');\n  }\n\n  setLikeCardOff(cardId) {\n    return this._fetch(`${this._path.cards}/likes/${cardId}`, 'DELETE');\n  }\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-14',\n  headers: {\n    authorization: '23bbe762-c214-4ce4-b9fd-b26b33fa43ee',\n    'Content-Type': 'application/json',\n  },\n});\n\nexport default api;\n","import React from 'react';\r\n\r\nexport default function Card(props) {\r\n  const [isMyCard, setIsMyCard] = React.useState(props.card.owner._id === props.currentUserId);\r\n  const [isLiked, setIsLiked] = React.useState(props.card.likes.some((item) => item._id === props.currentUserId));\r\n\r\n  function handleClick() {\r\n    // console.log(props.card);\r\n    props.onCardClick(props.card);\r\n  }\r\n\r\n  return (\r\n    <li className='elements__element' onClick={handleClick}>\r\n      <img src={props.card.link} alt={props.card.name} className='elements__image' />\r\n      {!isMyCard ? '' : <button className='elements__remove'></button>}\r\n      <div className='elements__caption'>\r\n        <p className='elements__title'>{props.card.name}</p>\r\n        <div className='elements__like'>\r\n          <button className={`elements__like-button ${isLiked ? 'elements__like-button_active' : ''}`}></button>\r\n          <p className='elements__like-counter'>{props.card.likes.length}</p>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport api from './utils/Api';\r\nimport Card from './Card';\r\n\r\nimport imgAvatar from '../images/profile__photo.png';\r\nimport imgEdit from '../images/profile__edit.svg';\r\nimport imgAdd from '../images/profile__add.svg';\r\n\r\nexport default function Main(props) {\r\n  const [userId, setUserId] = React.useState('');\r\n  const [userName, setUserName] = React.useState('');\r\n  const [userDescription, setUserDescription] = React.useState('');\r\n  const [userAvatar, setUserAvatar] = React.useState(imgAvatar);\r\n\r\n  const [cards, setCards] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    console.log('refresh userinfo');\r\n    api\r\n      .getCurrentUserInfo()\r\n      .then((result) => {\r\n        setUserId(result._id);\r\n        setUserName(result.name);\r\n        setUserDescription(result.about);\r\n        setUserAvatar(result.avatar);\r\n      })\r\n      .catch(() => {\r\n        console.error('can`t get userInfo');\r\n      });\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    console.log('refresh cards');\r\n    api\r\n      .getCards()\r\n      .then((result) => {\r\n        setCards(result);\r\n      })\r\n      .catch(() => {\r\n        console.error('can`t get userInfo');\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <section className='profile'>\r\n        <div className='profile__photo-overlay' onClick={props.onEditAvatar}>\r\n          <img src={userAvatar} alt='Фото профиля' className='profile__photo' />\r\n        </div>\r\n        <div className='profile__info'>\r\n          <div className='profile__title'>\r\n            <h1 className='profile__name'>{userName}</h1>\r\n            <button className='profile__edit-btn' onClick={props.onEditProfile}>\r\n              <img src={imgEdit} alt='Редактировать' className='profile__edit-img' />\r\n            </button>\r\n          </div>\r\n          <p className='profile__status'>{userDescription}</p>\r\n        </div>\r\n        <button className='profile__add-btn' onClick={props.onAddPlace}>\r\n          <img src={imgAdd} alt='Добавить' className='profile__add-img' />\r\n        </button>\r\n      </section>\r\n      <ul className='elements'>\r\n        {cards.map((card) => (\r\n          <Card card={card} currentUserId={userId} key={card._id} onCardClick={props.onCardClick} />\r\n        ))}\r\n      </ul>\r\n      {props.children}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <footer className='footer'>\r\n      <p className='footer__copyright'>&copy; 2020 Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\n","import React from 'react';\n\nexport default function PopupWithForm(props) {\n  return (\n    <div className={`popup popup_${props.name} ${props.isOpen ? 'popup_opened' : ''}`}>\n      <div className='popup__container'>\n        <button type='button' className='popup__close' onClick={props.onClose}></button>\n        <form className='popup__form popup__form_edit-profile' name='edit-profile'>\n          <h2 className='popup__heading'>{props.title}</h2>\n          {props.children}\n        </form>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\r\n\r\nexport default function PopupWithImage(props) {\r\n  console.log(props);\r\n  return (\r\n    <div className={`popup popup_show-image ${props.card ? 'popup_opened' : ''}`}>\r\n      <div className='popup__container'>\r\n        <button type='button' className='popup__close' onClick={props.onClose}></button>\r\n        <figure className='popup__figure'>\r\n          <img\r\n            src={props.card ? props.card.link : '#'}\r\n            alt={props.card ? props.card.name : ''}\r\n            className='popup__image'\r\n          />\r\n          <figcaption className='popup__caption'>{props.card ? props.card.name : ''}</figcaption>\r\n        </figure>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport logo from './images/header__logo.svg';\n\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport Footer from './components/Footer';\nimport PopupWithForm from './components/PopupWithForm';\nimport PopupWithImage from './components/PopupWithImage';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isRemoveCardPopupOpen, setIsRemoveCardPopupOpen] = React.useState(false);\n  const [isShowImagePopupOpen, setIsShowImagePopupOpen] = React.useState(false);\n\n  const [selectedCard, setSelectedCard] = React.useState();\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsRemoveCardPopupOpen(false);\n    setIsShowImagePopupOpen(false);\n    setSelectedCard();\n  }\n\n  function handleCardClick(card) {\n    // console.log(card);\n    setSelectedCard(card);\n  }\n\n  return (\n    <div className='content'>\n      <Header logo={logo} />\n\n      <Main\n        onEditProfile={handleEditProfileClick}\n        onAddPlace={handleAddPlaceClick}\n        onEditAvatar={handleEditAvatarClick}\n        onCardClick={handleCardClick}\n      >\n        <PopupWithForm\n          title='Обновить аватар'\n          name='update-avatar'\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n        >\n          <label htmlFor='input-update-avatar' className='popup__field'>\n            <input\n              type='url'\n              name='avatar'\n              id='input-update-avatar'\n              placeholder='Ссылка на картинку'\n              className='popup__input popup__input_field_avatar'\n              required\n            />\n            <span className='popup__input-error' id='input-update-avatar-error'></span>\n          </label>\n          <button type='submit' className='popup__save'>\n            Сохранить\n          </button>\n        </PopupWithForm>\n        <PopupWithForm\n          title='Редактировать профиль'\n          name='edit-profile'\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n        >\n          <label htmlFor='input-profile-name' className='popup__field'>\n            <input\n              type='text'\n              name='name'\n              defaultValue=''\n              id='input-profile-name'\n              className='popup__input popup__input_field_name'\n              required\n              minLength='2'\n              maxLength='40'\n            />\n            <span className='popup__input-error' id='input-profile-name-error'></span>\n          </label>\n          <label htmlFor='input-profile-about' className='popup__field'>\n            <input\n              type='text'\n              name='about'\n              defaultValue=''\n              id='input-profile-about'\n              className='popup__input popup__input_field_about'\n              required\n              minLength='2'\n              maxLength='200'\n            />\n            <span className='popup__input-error' id='input-profile-about-error'></span>\n          </label>\n          <button type='submit' className='popup__save'>\n            Сохранить\n          </button>\n        </PopupWithForm>\n        <PopupWithForm title='Новое место' name='add-card' isOpen={isAddPlacePopupOpen} onClose={closeAllPopups}>\n          <label htmlFor='input-addcard-location' className='popup__field'>\n            <input\n              type='text'\n              name='location'\n              id='input-addcard-location'\n              placeholder='Название'\n              className='popup__input popup__input_field_location'\n              required\n              minLength='1'\n              maxLength='30'\n            />\n            <span className='popup__input-error' id='input-addcard-location-error'></span>\n          </label>\n          <label htmlFor='input-addcard-image' className='popup__field'>\n            <input\n              type='url'\n              name='image'\n              id='input-addcard-image'\n              placeholder='Ссылка на картинку'\n              className='popup__input popup__input_field_image'\n              required\n            />\n            <span className='popup__input-error' id='input-addcard-image-error'></span>\n          </label>\n          <button type='submit' className='popup__save'>\n            Создать\n          </button>\n        </PopupWithForm>\n        <PopupWithForm title='Вы уверены?' name='remove-card' isOpen={isRemoveCardPopupOpen} onClose={closeAllPopups}>\n          <button type='submit' className='popup__save'>\n            Да\n          </button>\n        </PopupWithForm>\n        <PopupWithImage card={selectedCard} onClose={closeAllPopups}></PopupWithImage>\n      </Main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}